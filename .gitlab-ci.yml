image: node:9.4.0
image: docker
        


services:
    - docker:dind

before_script: #permet de lancer une série de commandes à executer pour préparer notre environnement...
    - apk update && apk add git
    #- mv Docker/twake-php twake-php
    #- mv Docker/docker-compose-test.yml docker-compose.yml
    #- mv Docker/parameters-test.yml app/config/parameters.yml
    #- apk add python python-dev py-pip build-base libffi-dev openssl-dev
    #- pip install docker-compose
    #- docker-compose up -d --build

stages:
    - test

test:
    stage: test
    only:
        refs:
            - schedules #permet d'executer le test selon le schedule
    script:
    
        - docker ps #To get the name of the existing container (juste pour info)
        - docker-compose exec -T php php -dmemory_limit=-1 composer.phar update
        - docker-compose exec -T php php /twake-core/bin/console cache:clear
        - set +e #Do something. If something fails with exit!=0 the script continues anyway
        - docker-compose exec -T php php /twake-core/bin/console cache:clear --env=prod
        - docker-compose exec -T php chmod -R 777 /twake-core/var/
        - docker-compose exec -T php chmod -R 777 /tmp/
        - docker-compose exec -T php php ./bin/console twake:init #Init install
        
        - docker-compose exec -T php  ./vendor/bin/phpunit

    when: always


manual_test:
    stage: test
    only:
        refs:
            - dev 
    script:
    
        - docker-compose exec -T php  ./vendor/bin/phpunit
        
    when: manual



front_test:

    stage: test

    script:
    
        - echo on met en place le FRONT- echo on met en place le FRONT
        - git clone https://mahaut:Mahaut59200@gitlab.com/Twake/Twake-react.git
        - cd Twake-react
        - apk update && apk add yarn
        - apk add npm
        #- apk update && apk install --no-install-recommends yarn -> if I use nvm
        - yarn install 
        - yarn run dev-build
        - npm install puppeteer --only=dev
        #- apk add libxss1 libappindicator1 libindicator7 wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 
        #- dpkg -i google-chrome*.deb # Might show "errors", fixed by next line sudo apt-get install -f # insatallation de chrome headless
        #- yarn add puppeteer #installation de la librairie puppeter
        
    when: manual    

    
