image: node:9.4.0
image: docker
        


services:
    - docker:dind

before_script: #permet de lancer une série de commandes à executer pour préparer notre environnement...
    - apk update && apk add git
    #- mv Docker/twake-php twake-php
    #- mv Docker/docker-compose-test.yml docker-compose.yml
    #- mv Docker/parameters-test.yml app/config/parameters.yml
    #- apk add python python-dev py-pip build-base libffi-dev openssl-dev
    #- pip install docker-compose
    #- docker-compose up -d --build

stages:
    - test

test:
    stage: test
    only:
        refs:
            - schedules #permet d'executer le test selon le schedule
    script:
    
        - docker ps #To get the name of the existing container (juste pour info)
        - docker-compose exec -T php php -dmemory_limit=-1 composer.phar update
        - docker-compose exec -T php php /twake-core/bin/console cache:clear
        - set +e #Do something. If something fails with exit!=0 the script continues anyway
        - docker-compose exec -T php php /twake-core/bin/console cache:clear --env=prod
        - docker-compose exec -T php chmod -R 777 /twake-core/var/
        - docker-compose exec -T php chmod -R 777 /tmp/
        - docker-compose exec -T php php ./bin/console twake:init #Init install
        
        - docker-compose exec -T php  ./vendor/bin/phpunit

    when: always


manual_test:
    stage: test
    only:
        refs:
            - dev 
    script:
    
        - docker-compose exec -T php  ./vendor/bin/phpunit
        
    when: manual



front_test:

    stage: test

    script:
    
        - echo on met en place le FRONT- echo on met en place le FRONT
        - git clone https://mahaut:Mahaut59200@gitlab.com/Twake/Twake-react.git
        - cd Twake-react
        - apk update && apk add yarn
        - apk add npm
        #- apk update && apk install --no-install-recommends yarn -> if I use nvm
        - yarn install 
        - yarn run dev-build
        
        #- apk add gconf-service libasound2 libatk1.0–0 libc6 libcairo2 libcups2 libdbus-1–3 libexpat1 libfontconfig1 libgcc1 libgconf-2–4 libgdk-pixbuf2.0–0 libglib2.0–0 libgtk-3–0 libnspr4 libpango-1.0–0 libpangocairo-1.0–0 libstdc++6 libx11–6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
        # si error while loading shared libraries: libX11-xcb.so.1 cannot ...
        
        - npm install
        - npm audit fix
        #- yarn add puppeter
        - npm install puppeteer --only=dev #installation de la librairie puppeter
        - npm audit fix
        - ls
        - mv src/test/navigatingToTwakeTest.js navigatingToTwakeTest.js #si ça marche il vaudra mieux déplacer ou dupliquer le package.json plutot que tous les tests... 
        - node navigatingToTwakeTest.js

        
    when: manual    

    
