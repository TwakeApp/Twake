imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: ws_routing.yml }
    - { resource: "@TwakeCalendarBundle/Resources/config/services.yml" }
    - { resource: "@TwakeUsersBundle/Resources/config/services.yml" }
    - { resource: "@TwakeCoreBundle/Resources/config/services.yml" }
    - { resource: "@TwakeDiscussionBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationAuthenticationBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.pdo
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        SERVER_NAME: %SERVER_NAME%

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password:     "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
         # We need this the dql property to register the custom doctrine functions :
        dql:
            string_functions:
            # Match agains should have the path to the MatchAgainst class created in the previous step
                MATCH_AGAINST: WebsiteApi\CoreBundle\Extensions\MatchAgainst

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
#    encryption: "%mailer_encryption%"
    auth_mode: "%mailer_auth_mode%"
    password: "%mailer_password%"
    host: "%mailer_host%"
    port: "%mailer_port%"
    username: "%mailer_username%"
    spool:     { type: memory }

#FOS Configuration
fos_user:
    db_driver:     orm
    firewall_name: main
    user_class:    WebsiteApi\UsersBundle\Entity\User
    registration:
        confirmation:
            enabled: true
    from_email:
        address: "twake@proxima.fr"
        sender_name: "Twake"

gos_web_socket:
    server:
        port: "%websocket_port%"        #The port the socket server will listen on
        host: "%websocket_host%"   #The host ip to bind to
    client:
        firewall: main #can be an array of firewalls
        session_handler: '@session.handler.pdo'
    pushers:
        wamp:
            host: "%websocket_host%"
            port: "%websocket_port%"
        zmq:
            default: true
            host: "%websocket_pusher_host%"
            port: "%websocket_pusher_port%"
            persistent: false
            protocol: tcp

nelmio_api_doc: ~

redjan_ym_fcm:
  firebase_api_key: "AAAAcp1VSak:APA91bFlHysMHpTk5id2Xb1yvF5DTyU46afjD2dYQgoFtH_angryy0QSQRzKvv29gqSb1Js6ze-LebAymKOluAEpIBH7xuQ0k9yaZcKYZ6gn1pBVGUv7YMaDZ_Tl7mC3JD9z9tIgkFAd"

rms_push_notifications:
  ios:
      timeout: 60 # Seconds to wait for connection timeout, default is 60
      sandbox: false
      pem: 'Resources/apns_prod.pem' # can be absolute or relative path (from app directory)

krlove_async_service_call:
  console_path: bin/console

easy_admin:
    list:
        actions: ['show']
    design:
        menu:
            - { entity: 'User', icon: 'user' }
            - { entity: 'Device', icon: 'phone' }
            - { entity: 'VerificationNumberMail', label: 'Mail verification', icon: 'envelope' }
            - { entity: 'Application', icon: 'rocket' }
            - { entity: 'Workspace', icon: 'coffee' }
            - { entity: 'Group', icon: 'building' }
            - { entity: 'PricingPlan', icon: 'dollar' }
    entities:
        User:
            class: WebsiteApi\UsersBundle\Entity\User
            label: 'Users'
            list:
                title: "Most recent users"
                fields: ['id', { property: 'connected', label: 'Connected', type: 'boolean' }, 'enabled', {property: 'thumbnail.publicURL', label: 'Image', type: 'image'}, 'username', 'first_name', 'last_name', 'email', 'language']
            form:
                fields: ['enabled', 'username', 'first_name', 'last_name', 'email']
            show:
                fields: ['id', { property: 'connected', label: 'Connected', type: 'boolean' }, 'connections', 'enabled', {property: 'thumbnail.publicURL', label: 'Image', type: 'image'}, 'username', 'first_name', 'last_name', 'email', 'language']
            disabled_actions: ['new', 'delete', 'edit']
        VerificationNumberMail:
            class: WebsiteApi\UsersBundle\Entity\VerificationNumberMail
            label: 'Number verification by mail'
            list:
                title: "Number verification by mail"
                fields: ['id', 'mail', 'date', 'clean_code']
            disabled_actions: ['new', 'edit']
        Device:
            class: WebsiteApi\UsersBundle\Entity\Device
            label: 'Devices'
            disabled_actions: ['new']

        Application:
            class: WebsiteApi\MarketBundle\Entity\Application
            label: 'Applications'
            list:
                title: "Twake applications"
                fields: ['id',{property: 'urlThumbnail', label: 'Image', type: 'image'}, 'name', 'enabled', 'default', 'url']
            edit:
                fields: ['name', 'color', 'privateKey', 'publicKey', 'enabled', 'default', 'url', 'isCapable', 'canCreateFile', 'createFileDataRaw', 'filesTypesRaw']
            new:
                fields: ['name', 'color', 'privateKey', 'publicKey', 'enabled', 'default', 'url', 'isCapable', 'canCreateFile', 'createFileDataRaw', 'filesTypesRaw']
            show:
                fields: ['id',{property: 'urlThumbnail', label: 'Image', type: 'image'}, 'name', 'color', 'privateKey', 'publicKey', 'enabled', 'default', 'url', 'isCapable', 'canCreateFile', 'createFileDataRaw', 'filesTypesRaw']

        Workspace:
            class: WebsiteApi\WorkspacesBundle\Entity\Workspace
            label: 'Workspaces'
            list:
                title: "Twake workspaces"
                fields: ['id', 'isDeleted', {property: 'logo.publicURL', label: 'Image', type: 'image'}, 'name', 'dateAdded', 'group', 'members']
            show:
                fields: ['id', {property: 'logo.publicURL', label: 'Image', type: 'image'}, 'name', 'dateAdded', 'group', 'members']
            edit:
                fields: ['isDeleted']
            disabled_actions: ['new']
        Group:
            class: WebsiteApi\WorkspacesBundle\Entity\Group
            label: 'Groups'
            list:
                title: "Twake groups"
                fields: ['id', {property: 'logo.publicURL', label: 'Image', type: 'image'}, 'name', 'displayName', 'dateAdded', 'pricingPlan', 'workspaces']
            show:
                fields: ['id', {property: 'logo.publicURL', label: 'Image', type: 'image'}, 'name', 'displayName', 'dateAdded', 'pricingPlan', 'workspaces']
            disabled_actions: ['new', 'edit']
        PricingPlan:
            class: WebsiteApi\WorkspacesBundle\Entity\PricingPlan
            label: 'Pricing plans'
            list:
                title: "Pricing plans"

