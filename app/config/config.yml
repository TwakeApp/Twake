imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: ws_routing.yml }
    - { resource: "@TwakeCalendarBundle/Resources/config/services.yml" }
    - { resource: "@TwakeUsersBundle/Resources/config/services.yml" }
    - { resource: "@TwakeCoreBundle/Resources/config/services.yml" }
    - { resource: "@TwakeDiscussionBundle/Resources/config/services.yml" }
    - { resource: "@TwakeChannelsBundle/Resources/config/services.yml" }
    - { resource: "@TwakeMarketBundle/Resources/config/services.yml" }
    - { resource: "@TwakePaymentsBundle/Resources/config/services.yml" }
    - { resource: "@TwakeUploadBundle/Resources/config/services.yml" }
    - { resource: "@TwakeGlobalSearchBundle/Resources/config/services.yml" }
    - { resource: "@TwakeDriveUploadBundle/Resources/config/services.yml" }
    - { resource: "@TwakeTasksBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationApiCoreBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationApiUsersBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationApiGroupBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationApiWorkspacesBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationApiAppsBundle/Resources/config/services.yml" }
    - { resource: "@AdministrationApiCounterBundle/Resources/config/services.yml"}

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.twake
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
        cookie_lifetime: 3600000 #1 000h
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        SERVER_NAME: %SERVER_NAME%

# Doctrine Configuration
doctrine:
    dbal:
        driver: "pdo_mysql"
#        driver_class:  WebsiteApi\CoreBundle\Services\DoctrineAdapter\DBAL\Driver\PDOCassandra\Driver
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_dbname%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password:     "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: false #"%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
         # We need this the dql property to register the custom doctrine functions :
        dql:
            string_functions:
            # Match agains should have the path to the MatchAgainst class created in the previous step
                MATCH_AGAINST: WebsiteApi\CoreBundle\Extensions\MatchAgainst


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
#    encryption: "%mailer_encryption%"
    auth_mode: "%mailer_auth_mode%"
    password: "%mailer_password%"
    host: "%mailer_host%"
    port: "%mailer_port%"
    username: "%mailer_username%"
    spool:     { type: memory }

#FOS Configuration
fos_user:
    db_driver:     orm
    firewall_name: main
    user_class:    WebsiteApi\UsersBundle\Entity\User
    registration:
        confirmation:
            enabled: true
    from_email:
        address: "twake@proxima.fr"
        sender_name: "Twake"

gos_web_socket:
    server:
        port: "%websocket_port%"        #The port the socket server will listen on
        host: "%websocket_host%"   #The host ip to bind to
    client:
        firewall: main #can be an array of firewalls
        session_handler: '@session.handler.no_sessions'
    shared_config: true
    periodic:
        - '@websocket.pdo.ping'
    pushers:
        wamp:
            host: "%websocket_host%"
            port: "%websocket_port%"
        zmq:
            default: true
            host: "%websocket_pusher_host%"
            port: "%websocket_pusher_port%"
            persistent: false
            protocol: tcp

nelmio_api_doc: ~

cmen_google_charts:
    version: "current"

tweede_golf_prometheus:
    storage_adapter_service: TweedeGolf\PrometheusClient\Storage\ApcuAdapter
    metrics_path: metrics
    make_memory_adapter: true
    register_defaults: true
    collectors:
        app_collectors_call_count:
            counter:
                labels: [app, route]
                help: Number of call to the API
        app_collectors_response_code:
            counter:
                labels: [app, route, status_code]
                help: number of call to the API per response code
        app_collectors_memory_usage:
            gauge:
                labels: [app, route]
                help: Memory in byte per route
                initializer: 0
        app_collectors_response_time:
            gauge:
                labels: [app, route]
                help: Request execution time in seconds
                initializer: 0.0
        app_collectors_response_size:
            gauge:
                labels: [app, route]
                help: Response size in bytes
                initializer: 0
