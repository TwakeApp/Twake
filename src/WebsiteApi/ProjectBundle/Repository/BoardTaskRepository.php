<?php

namespace WebsiteApi\ProjectBundle\Repository;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BoardTaskRepository extends \WebsiteApi\CoreBundle\Services\DoctrineAdapter\RepositoryAdapter
{

    public function removeAllByBoard($board){
        $qb = $this->createQueryBuilder('e');
        $qb->delete();
        $qb->where('e.board = :board');
        $qb->setParameter('board', $board);
        $q = $qb->getQuery();

        return $q->getResult();
    }

    public function getBoardsTasksBy($from, $to, $boardsId){

        $qb = $this->createQueryBuilder('e');
        $qb->where($qb->expr()->gte('e.to', '?1'));
        $qb->andWhere($qb->expr()->lte('e.from', '?2'));
        $qb->andWhere($qb->expr()->in('e.board', '?3'));
        $qb->setParameter(1, $from);
        $qb->setParameter(2, $to);
        $qb->setParameter(3, $this->queryBuilderUuid($boardsId));
        $q= $qb->getQuery();

        return $q->getResult();
    }

    public function toRemind()
    {
        $qb = $this->createQueryBuilder('e');
        $qb->where($qb->expr()->neq('e.nextReminder', '0'));
        $qb->andWhere($qb->expr()->lte('e.nextReminder', date("U")));
        $q = $qb->getQuery();

        return $q->getResult();
    }

    public function getAllBoardTasksByBoard($boardId){
        $qb = $this->createQueryBuilder(e);
        $qb->where($qb->expr()->in('e.board', '?1'))
            ->setParameter(1, $boardId);
        $q= $qb->getQuery();

        return $q->getResult();
    }

}