<?php

namespace WebsiteApi\DriveBundle\Repository;

/**
 * DriveFileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DriveFileRepository extends \Doctrine\ORM\EntityRepository
{

	public function sumSize($group, $directory = null)
	{
		$qb = $this->createQueryBuilder('f')
			->select('sum(f.size)')
			->where('f.group = :group')
			->setParameter("group", $group);

		if ($directory == null) {
			$qb = $qb->andWhere('f.parent IS NULL');
		} else {
			$qb = $qb->andWhere('f.parent = :directory')
				->setParameter("directory", $directory);
		}

		return $qb->getQuery()->getSingleScalarResult();
	}

    public function sumSizeByExt($group)
    {
        $qb = $this->createQueryBuilder('f')
            ->select('f.extension, sum(f.size) as sizes')
            ->where('f.group = :group')
            ->setParameter("group", $group)
            ->andWhere('f.isDirectory = false')
            ->groupBy('f.extension');

        return $qb->getQuery()->getResult();
    }

	public function listDirectory($group, $directory = null, $trash = false)
	{

		return $this->findBy(Array(
			"group" => $group,
			"parent" => $directory,
			"isInTrash" => $trash
		), Array("name" => "ASC"));

	}

	public function search($group, $query, $offset = 0, $max = 20)
	{
		//TODO implement search method
		return [];
	}

	public function countEachExtension(){
        $req = $this->createQueryBuilder('f')
            ->select('f.extension, count(f.extension)')
            ->groupBy('f.extension');
        return $req->getQuery()->getResult();
    }

    public function countEachExtensionByWorkspace($group){
        $req = $this->createQueryBuilder('f')
            ->select('f.extension, count(f.extension) AS nb')
            ->where('f.group = \'' . $group . '\'')
            ->groupBy('f.extension');
        return $req->getQuery()->getResult();
    }


}
